name: Triton-Shared Plugin Testing

on:
  workflow_call:
    inputs:
      triton-ref:
        required: true
        type: string
      triton-shared-ref:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      triton-ref:
        required: true
        type: string
      triton-shared-ref:
        required: true
        type: string

jobs:
  build_and_test_triton_shared:
    runs-on: ubuntu-latest

    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: linux/arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Checkout Triton
      uses: actions/checkout@v4
      with:
        repository: 'openai/triton'
        ref: ${{ inputs.triton-ref }}
        path: triton
        submodules: 'recursive'

    - name: Checkout Triton-Shared
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.triton-shared-ref }}
        path: triton/third_party/triton_shared

    # All other steps go here, wrapped in Docker commands as needed

    # Example of a Docker command
    - name: Run an example
      run: |
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker run --rm -v $(pwd):/workspace -w /workspace/triton/python arm64v8/ubuntu bash -c "
        export TRITON_CODEGEN_TRITON_SHARED=1
        python3 -m pip install --upgrade pip
        python3 -m pip install cmake==3.24
        python3 -m pip install ninja
        python3 -m pip uninstall -y triton
        python3 setup.py build
        python3 -m pip install --no-build-isolation -vvv '.[tests]'
        export TRITON_SHARED_OPT_PATH=\"\$(pwd)/build/\$(ls \$(pwd)/build | grep -i cmake)/third_party/triton_shared/tools/triton-shared-opt/triton-shared-opt\"
        export LLVM_BINARY_DIR=\"${HOME}/.triton/llvm/\$(ls ${HOME}/.triton/llvm/ | grep -i llvm)/bin\"
        python3 ../third_party/triton_shared/python/examples/reduce.py"
