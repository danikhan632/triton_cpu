module {
  func.func @load_store_prefetch(%arg0: memref<4x4xi32>, %arg1: index) {
    %0 = builtin.unrealized_conversion_cast %arg0 : memref<4x4xi32> to !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)>
    %1 = builtin.unrealized_conversion_cast %arg1 : index to i64
    %2 = llvm.extractvalue %0[1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %3 = llvm.mlir.constant(4 : index) : i64
    %4 = llvm.mul %1, %3  : i64
    %5 = llvm.add %4, %1  : i64
    %6 = llvm.getelementptr %2[%5] : (!llvm.ptr, i64) -> !llvm.ptr, i32
    %7 = llvm.load %6 : !llvm.ptr -> i32
    %8 = llvm.extractvalue %0[1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %9 = llvm.mlir.constant(4 : index) : i64
    %10 = llvm.mul %1, %9  : i64
    %11 = llvm.add %10, %1  : i64
    %12 = llvm.getelementptr %8[%11] : (!llvm.ptr, i64) -> !llvm.ptr, i32
    %13 = llvm.load %12 : !llvm.ptr -> i32
    %14 = llvm.extractvalue %0[1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %15 = llvm.mlir.constant(4 : index) : i64
    %16 = llvm.mul %1, %15  : i64
    %17 = llvm.add %16, %1  : i64
    %18 = llvm.getelementptr %14[%17] : (!llvm.ptr, i64) -> !llvm.ptr, i32
    "llvm.intr.prefetch"(%18) <{cache = 1 : i32, hint = 1 : i32, rw = 1 : i32}> : (!llvm.ptr) -> ()
    %19 = llvm.extractvalue %0[1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %20 = llvm.mlir.constant(4 : index) : i64
    %21 = llvm.mul %1, %20  : i64
    %22 = llvm.add %21, %1  : i64
    %23 = llvm.getelementptr %19[%22] : (!llvm.ptr, i64) -> !llvm.ptr, i32
    "llvm.intr.prefetch"(%23) <{cache = 0 : i32, hint = 3 : i32, rw = 0 : i32}> : (!llvm.ptr) -> ()
    return
  }
}